p1 = (a00*exp(a01*W[1])/(a00*exp(a01*W[1]) + a00*exp(a01*W[2])))*(1 - p0);
p2 = 1-p0-p1;
p = [p0, p1, p2]';
}
model{
for (i in 1:n){
//target += multinomial_lpmf(DAT[i,] | p);
DAT[i,] ~ multinomial(p);
//DAT[i,] ~ multi_log(p0, p1, p2);
}
a00 ~ gamma(1, 1);
a01 ~ gamma(1, 1);
}
"
stan_dat = list(
n = nrow(Tmatrxi),
DAT = Tmatrxi,
W = w,
Tim = seq(10, 40, 10)
)
fit <- stan(
model_code = reliab, data = stan_dat, #init_r = 0.1, init = 0.001,
warmup = 2000, iter = 4000, chains = 1, cores = 1, seed = 3)
summary(fit)
round(summary(fit)$summary[,1], 4)
p(1, 1)
Tmatrxi = t(rmultinom(1000, K[1], prob = p(1, 1)))
stan_dat = list(
n = nrow(Tmatrxi),
DAT = Tmatrxi,
W = w,
Tim = seq(10, 40, 10)
)
fit <- stan(
model_code = reliab, data = stan_dat, #init_r = 0.1, init = 0.001,
warmup = 2000, iter = 4000, chains = 1, cores = 1, seed = 3)
round(summary(fit)$summary[,1], 4)
p(1, 1)
Tmatrxi = t(rmultinom(1000, K[3], prob = p(1, 1)))
stan_dat = list(
n = nrow(Tmatrxi),
DAT = Tmatrxi,
W = w,
Tim = seq(10, 40, 10)
)
fit <- stan(
model_code = reliab, data = stan_dat, #init_r = 0.1, init = 0.001,
warmup = 2000, iter = 4000, chains = 1, cores = 1, seed = 3)
round(summary(fit)$summary[,1], 4)
p(1, 1)
reliab = "
functions{
real multi_log(vector t, real the0, real the1, real the2){
real loglikelihood;
loglikelihood = t[1]*log(the0)+t[2]*log(the1)+t[3]*log(the2);
return loglikelihood;
}
}
data {
int<lower=0> n;
int DAT[n, 3];
vector[2] W;
vector[4] Tim;
}
parameters{
real<lower=0, upper=0.5> a10;
real<lower=0, upper=0.5> a11;
real<lower=0, upper=0.5> a20;
real<lower=0, upper=0.5> a21;
}
transformed parameters{
real<lower=0, upper=1> p0;
real<lower=0, upper=1> p1;
real<lower=0, upper=1> p2;
vector<lower=0, upper=1>[3] p;
p0 = exp(-(a10*exp(a11*W[1]) + a20*exp(a21*W[2]))*Tim[1]);
p1 = (a10*exp(a11*W[1]))/(a10*exp(a11*W[1]) + a20*exp(a21*W[2]))*(1 - p0);
p2 = 1-p0-p1;
p = [p0, p1, p2]';
}
model{
for (i in 1:n){
//target += multinomial_lpmf(DAT[i,] | p);
DAT[i,] ~ multinomial(p);
//DAT[i,] ~ multi_log(p0, p1, p2);
}
a00 ~ gamma(1, 1);
a01 ~ gamma(1, 1);
}
"
stan_dat = list(
n = nrow(Tmatrxi),
DAT = Tmatrxi,
W = w,
Tim = seq(10, 40, 10)
)
fit <- stan(
model_code = reliab, data = stan_dat, #init_r = 0.1, init = 0.001,
warmup = 2000, iter = 4000, chains = 1, cores = 1, seed = 3)
summary(fit)
round(summary(fit)$summary[,1], 4)
reliab = "
data {
int<lower=0> n;
int DAT[n, 3];
vector[2] W;
vector[4] Tim;
}
parameters{
real<lower=0, upper=0.5> a10;
real<lower=0, upper=0.5> a11;
real<lower=0, upper=0.5> a20;
real<lower=0, upper=0.5> a21;
}
transformed parameters{
real<lower=0, upper=1> p0;
real<lower=0, upper=1> p1;
real<lower=0, upper=1> p2;
vector<lower=0, upper=1>[3] p;
p0 = exp(-(a10*exp(a11*W[1]) + a20*exp(a21*W[2]))*Tim[1]);
p1 = (a10*exp(a11*W[1]))/(a10*exp(a11*W[1]) + a20*exp(a21*W[2]))*(1 - p0);
p2 = 1-p0-p1;
p = [p0, p1, p2]';
}
model{
for (i in 1:n){
//target += multinomial_lpmf(DAT[i,] | p);
DAT[i,] ~ multinomial(p);
//DAT[i,] ~ multi_log(p0, p1, p2);
}
a00 ~ gamma(1, 1);
a01 ~ gamma(1, 1);
}
"
stan_dat = list(
n = nrow(Tmatrxi),
DAT = Tmatrxi,
W = w,
Tim = seq(10, 40, 10)
)
fit <- stan(
model_code = reliab, data = stan_dat, #init_r = 0.1, init = 0.001,
warmup = 2000, iter = 4000, chains = 1, cores = 1, seed = 3)
reliab = "
data {
int<lower=0> n;
int DAT[n, 3];
vector[2] W;
vector[4] Tim;
}
parameters{
real<lower=0, upper=0.5> a10;
real<lower=0, upper=0.5> a11;
real<lower=0, upper=0.5> a20;
real<lower=0, upper=0.5> a21;
}
transformed parameters{
real<lower=0, upper=1> p0;
real<lower=0, upper=1> p1;
real<lower=0, upper=1> p2;
vector<lower=0, upper=1>[3] p;
p0 = exp(-(a10*exp(a11*W[1]) + a20*exp(a21*W[2]))*Tim[1]);
p1 = (a10*exp(a11*W[1]))/(a10*exp(a11*W[1]) + a20*exp(a21*W[2]))*(1 - p0);
p2 = 1-p0-p1;
p = [p0, p1, p2]';
}
model{
for (i in 1:n){
//target += multinomial_lpmf(DAT[i,] | p);
DAT[i,] ~ multinomial(p);
//DAT[i,] ~ multi_log(p0, p1, p2);
}
a10 ~ gamma(1, 1);
a11 ~ gamma(1, 1);
a20 ~ gamma(1, 1);
a21 ~ gamma(1, 1);
}
"
stan_dat = list(
n = nrow(Tmatrxi),
DAT = Tmatrxi,
W = w,
Tim = seq(10, 40, 10)
)
fit <- stan(
model_code = reliab, data = stan_dat, #init_r = 0.1, init = 0.001,
warmup = 2000, iter = 4000, chains = 1, cores = 1, seed = 3)
round(summary(fit)$summary[,1], 4)
p(1, 1)
Tmatrxi = t(rmultinom(100, K[3], prob = p(1, 1)))
fit <- stan(
model_code = reliab, data = stan_dat, #init_r = 0.1, init = 0.001,
warmup = 2000, iter = 4000, chains = 1, cores = 1, seed = 3)
head(Tmatrxi)
head(t(rmultinom(100, 10, prob = p(1, 1))))
# N = 10
set.seed(123)
Tmatrxi = t(rmultinom(10, 10, prob = p(1, 1)))
stan_dat = list(
n = nrow(Tmatrxi),
DAT = Tmatrxi,
W = w,
Tim = seq(10, 40, 10)
)
fit10 <- stan(
model_code = reliab, data = stan_dat, #init_r = 0.1, init = 0.001,
warmup = 1000, iter = 2000, chains = 1, cores = 1, seed = 3)
# N = 50
set.seed(123)
Tmatrxi = t(rmultinom(50, 50, prob = p(1, 1)))
stan_dat = list(
n = nrow(Tmatrxi),
DAT = Tmatrxi,
W = w,
Tim = seq(10, 40, 10)
)
fit50 <- stan(
model_code = reliab, data = stan_dat, #init_r = 0.1, init = 0.001,
warmup = 1000, iter = 2000, chains = 1, cores = 1, seed = 3)
# N = 100
set.seed(123)
Tmatrxi = t(rmultinom(100, 100, prob = p(1, 1)))
stan_dat = list(
n = nrow(Tmatrxi),
DAT = Tmatrxi,
W = w,
Tim = seq(10, 40, 10)
)
fit100 <- stan(
model_code = reliab, data = stan_dat, #init_r = 0.1, init = 0.001,
warmup = 1000, iter = 2000, chains = 1, cores = 1, seed = 3)
# N = 500
set.seed(123)
Tmatrxi = t(rmultinom(500, 500, prob = p(1, 1)))
stan_dat = list(
n = nrow(Tmatrxi),
DAT = Tmatrxi,
W = w,
Tim = seq(10, 40, 10)
)
fit500 <- stan(
model_code = reliab, data = stan_dat, #init_r = 0.1, init = 0.001,
warmup = 1000, iter = 2000, chains = 1, cores = 1, seed = 3)
# N = 1000
set.seed(123)
Tmatrxi = t(rmultinom(1000, 1000, prob = p(1, 1)))
stan_dat = list(
n = nrow(Tmatrxi),
DAT = Tmatrxi,
W = w,
Tim = seq(10, 40, 10)
)
fit1000 <- stan(
model_code = reliab, data = stan_dat, #init_r = 0.1, init = 0.001,
warmup = 1000, iter = 2000, chains = 1, cores = 1, seed = 3)
saveRDS(fit10, 'data/fit10.rds')
saveRDS(fit50, 'data/fit50.rds')
saveRDS(fit100, 'data/fit100.rds')
saveRDS(fit500, 'data/fit500.rds')
saveRDS(fit1000, 'data/fit1000.rds')
citation()
citation(package = "rstan", lib.loc = NULL)
?rgamma
dat = sim_gam(1, 10)
sim_gam = function(a, b){
x = seq(0, 100, 0.1)
y = b^a/factorial(a-1)*x^(a-1)*exp(-b*x)
dat = data.frame(x, y)
return(dat)
}
dat = sim_gam(1, 10)
dat %>%
ggplot(aes(x, y)) + geom_line()
pacman::p_load(tidyverse)
dat %>%
ggplot(aes(x, y)) + geom_line()
pacman::p_load(tidyverse)
sim_gam = function(a, b){
x = seq(0, 10, 0.1)
y = b^a/factorial(a-1)*x^(a-1)*exp(-b*x)
dat = data.frame(x, y)
return(dat)
}
dat = sim_gam(1, 10)
dat %>%
ggplot(aes(x, y)) + geom_line()
pacman::p_load(tidyverse)
sim_gam = function(a, b){
x = seq(0, 2, 0.1)
y = b^a/factorial(a-1)*x^(a-1)*exp(-b*x)
dat = data.frame(x, y)
return(dat)
}
dat = sim_gam(1, 10)
dat %>%
ggplot(aes(x, y)) + geom_line()
pacman::p_load(tidyverse)
sim_gam = function(a, b){
x = seq(0, 1, 0.1)
y = b^a/factorial(a-1)*x^(a-1)*exp(-b*x)
dat = data.frame(x, y)
return(dat)
}
dat = sim_gam(1, 10)
dat %>%
ggplot(aes(x, y)) + geom_line()
pacman::p_load(tidyverse)
sim_gam = function(a, b){
x = seq(0, 1, 0.01)
y = b^a/factorial(a-1)*x^(a-1)*exp(-b*x)
dat = data.frame(x, y)
return(dat)
}
dat = sim_gam(1, 10)
dat %>%
ggplot(aes(x, y)) + geom_line()
pacman::p_load(tidyverse)
sim_gam = function(a, b){
x = seq(0, 1, 0.01)
y = b^a/factorial(a-1)*x^(a-1)*exp(-b*x)
dat = data.frame(x, y)
return(dat)
}
dat = sim_gam(1, 10)
ggplot(dat, aes(x, y)) + geom_line() + theme_bw()
pacman::p_load(tidyverse)
sim_gam = function(a, b){
x = seq(0, 1, 0.001)
y = b^a/factorial(a-1)*x^(a-1)*exp(-b*x)
dat = data.frame(x, y)
return(dat)
}
dat = sim_gam(1, 10)
ggplot(dat, aes(x, y)) + geom_line() + theme_bw()
pacman::p_load(tidyverse)
sim_gam = function(a, b){
x = seq(0, 1, 0.001)
y = b^a/factorial(a-1)*x^(a-1)*exp(-b*x)
dat = data.frame(x, y)
return(dat)
}
dat = sim_gam(1, 10)
ggplot(dat, aes(x, y)) + geom_line() + theme_bw()
ggplot(dat, aes(x, y)) + geom_line() + theme_bw()+ylab('伽马分布概率密度')
ggplot(dat, aes(x, y)) + geom_line() + theme_bw()+ylab('伽马分布（1,10）的概率密度')
fit10 = readRDS('data/fit10.rds')
summary(fit10)
summary(fit10)$summary
summary(fit10)$summary
class(fit10)
broom::tidy(fit10)
fit10 = readRDS('data/fit10.rds')
summary(fit10)$summary[1:7,]
knitr::kable(summary(fit10)$summary[1:7,], digits = 4)
str(fit10)
summary(fit10)['summary']
summary(fit10)['summary'][1:7,] %>%
as.data.frame() %>%
knitr::kable(digits = 4)
summary(fit10)['summary']
summary(fit10)['summary'][1:7,]
summary(fit10)$summary[1:7,]
summary(fit10)$summary[1:7,] %>%
as.data.frame()
summary(fit10)['summary']
summary(fit10)['summary'] %>%
as.data.frame()
quote(fit10)
# write out tables
wtab = function(fit){
dat = as.data.frame(summary(fit)$summary)
write.csv(dat, paste0(quote(fit), '.csv'))
}
wtab(fit10)
# write out tables
wtab = function(fit){
dat = as.data.frame(summary(fit)$summary)
write.csv(dat, paste0('data/', quote(fit), '.csv'))
}
wtab = function(fit, filename){
dat = as.data.frame(summary(fit)$summary[1:7,])
write.csv(dat, paste0('data/', filename, '.csv'))
}
wtab(fit10, 'fit10')
wtab(fit10, 'fit10.csv')
wtab(fit50, 'fit50.csv')
wtab(fit100, 'fit100.csv')
wtab(fit500, 'fit500.csv')
wtab(fit1000, 'fit1000.csv')
plot(fit10, show_density = TRUE, ci_level = 0.5, fill_color = "purple")
plot(fit10, plotfun = "rhat", show_density = TRUE, ci_level = 0.5, fill_color = "purple")
plot(fit10, show_density = TRUE, ci_level = 0.5, fill_color = "purple")
plot(fit10, plotfun = "trace", show_density = TRUE, ci_level = 0.5, fill_color = "purple")
plot(fit10, plotfun = "trace")
plot(fit10, plotfun = "trace", pars = c("a10", "a11", "a20", "a22", "p0", "p1", "p2"))
plot(fit10, plotfun = "trace", pars = c("a10", "a11", "a20", "a21", "p0", "p1", "p2"))
plot(fit10, plotfun = "trace", inc_warmup = TRUE,
pars = c("a10", "a11", "a20", "a21", "p0", "p1", "p2"))
plot(fit10, plotfun = "trace", #inc_warmup = TRUE,
pars = c("a10", "a11", "a20", "a21", "p0", "p1", "p2"))
# N = 10
set.seed(123)
Tmatrxi = t(rmultinom(10, 10, prob = p(1, 1)))
stan_dat = list(
n = nrow(Tmatrxi),
DAT = Tmatrxi,
W = w,
Tim = seq(10, 40, 10)
)
fit10 <- stan(
model_code = reliab, data = stan_dat, #init_r = 0.1, init = 0.001,
warmup = 1000, iter = 2000, chains = 3, cores = 3, seed = 3)
# N = 50
set.seed(123)
Tmatrxi = t(rmultinom(50, 50, prob = p(1, 1)))
stan_dat = list(
n = nrow(Tmatrxi),
DAT = Tmatrxi,
W = w,
Tim = seq(10, 40, 10)
)
fit50 <- stan(
model_code = reliab, data = stan_dat, #init_r = 0.1, init = 0.001,
warmup = 1000, iter = 2000, chains = 3, cores = 3, seed = 3)
# N = 100
set.seed(123)
Tmatrxi = t(rmultinom(100, 100, prob = p(1, 1)))
stan_dat = list(
n = nrow(Tmatrxi),
DAT = Tmatrxi,
W = w,
Tim = seq(10, 40, 10)
)
fit100 <- stan(
model_code = reliab, data = stan_dat, #init_r = 0.1, init = 0.001,
warmup = 1000, iter = 2000, chains = 3, cores = 3, seed = 3)
# N = 500
set.seed(123)
Tmatrxi = t(rmultinom(500, 500, prob = p(1, 1)))
stan_dat = list(
n = nrow(Tmatrxi),
DAT = Tmatrxi,
W = w,
Tim = seq(10, 40, 10)
)
fit500 <- stan(
model_code = reliab, data = stan_dat, #init_r = 0.1, init = 0.001,
warmup = 1000, iter = 2000, chains = 3, cores = 3, seed = 3)
# N = 1000
set.seed(123)
Tmatrxi = t(rmultinom(1000, 1000, prob = p(1, 1)))
stan_dat = list(
n = nrow(Tmatrxi),
DAT = Tmatrxi,
W = w,
Tim = seq(10, 40, 10)
)
fit1000 <- stan(
model_code = reliab, data = stan_dat, #init_r = 0.1, init = 0.001,
warmup = 1000, iter = 2000, chains = 3, cores = 3, seed = 3)
saveRDS(fit10, 'data/fit10.rds')
saveRDS(fit50, 'data/fit50.rds')
saveRDS(fit100, 'data/fit100.rds')
saveRDS(fit500, 'data/fit500.rds')
saveRDS(fit1000, 'data/fit1000.rds')
wtab = function(fit, filename){
dat = as.data.frame(summary(fit)$summary[1:7,])
write.csv(dat, paste0('data/', filename))
}
wtab(fit10, 'fit10.csv')
wtab(fit10, 'fit10.csv')
wtab(fit50, 'fit50.csv')
wtab(fit100, 'fit100.csv')
wtab(fit500, 'fit500.csv')
wtab(fit1000, 'fit1000.csv')
fit10 = readRDS('data/fit10.rds')
plot(fit10, plotfun = "trace", #inc_warmup = TRUE,
pars = c("a10", "a11", "a20", "a21", "p0", "p1", "p2"))
10*0.618
plot(fit10, plotfun = "trace", #inc_warmup = TRUE,
pars = c("a10", "a11", "a20", "a21", "p0", "p1", "p2"))
ggsave(fit10, 'figs/fit10.png', dpi = 300, height = 6.18, width = 10)
plot(fit50, plotfun = "trace", #inc_warmup = TRUE,
pars = c("a10", "a11", "a20", "a21", "p0", "p1", "p2"))
ggsave(fit50, 'figs/fit10.png', dpi = 300, height = 6.18, width = 10)
plot(fit100, plotfun = "trace", #inc_warmup = TRUE,
pars = c("a10", "a11", "a20", "a21", "p0", "p1", "p2"))
ggsave(fit100, 'figs/fit10.png', dpi = 300, height = 6.18, width = 10)
plot(fit500, plotfun = "trace", #inc_warmup = TRUE,
pars = c("a10", "a11", "a20", "a21", "p0", "p1", "p2"))
ggsave(fit500, 'figs/fit10.png', dpi = 300, height = 6.18, width = 10)
plot(fit1000, plotfun = "trace", #inc_warmup = TRUE,
pars = c("a10", "a11", "a20", "a21", "p0", "p1", "p2"))
ggsave(fit1000, 'figs/fit10.png', dpi = 300, height = 6.18, width = 10)
plot(fit10, plotfun = "trace", #inc_warmup = TRUE,
pars = c("a10", "a11", "a20", "a21", "p0", "p1", "p2"))
ggsave('figs/fit10.png', dpi = 300, height = 6.18, width = 10)
plot(fit10, plotfun = "trace", #inc_warmup = TRUE,
pars = c("a10", "a11", "a20", "a21", "p0", "p1", "p2"))
ggsave('figs/fit10.png', dpi = 300, height = 6.18, width = 10)
plot(fit50, plotfun = "trace", #inc_warmup = TRUE,
pars = c("a10", "a11", "a20", "a21", "p0", "p1", "p2"))
ggsave('figs/fit50.png', dpi = 300, height = 6.18, width = 10)
plot(fit100, plotfun = "trace", #inc_warmup = TRUE,
pars = c("a10", "a11", "a20", "a21", "p0", "p1", "p2"))
ggsave('figs/fit100.png', dpi = 300, height = 6.18, width = 10)
plot(fit500, plotfun = "trace", #inc_warmup = TRUE,
pars = c("a10", "a11", "a20", "a21", "p0", "p1", "p2"))
ggsave('figs/fit500.png', dpi = 300, height = 6.18, width = 10)
plot(fit1000, plotfun = "trace", #inc_warmup = TRUE,
pars = c("a10", "a11", "a20", "a21", "p0", "p1", "p2"))
ggsave('figs/fit1000.png', dpi = 300, height = 6.18, width = 10)
